name: Container

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
      - docker

    # Publish `v1.2.3` tags as releases.
    tags:
      - 1*
      - 2*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: pycryptobot

jobs:
  # Build and push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Log into registry
        run: echo "${{ secrets.PACKAGE_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          # Build and Publish container image
          docker buildx build --push \
          --tag $IMAGE_NAME $IMAGE_ID:$VERSION \
          --platform linux/armhf,linux/aarch64,linux/amd64 \
          --file Dockerfile .

